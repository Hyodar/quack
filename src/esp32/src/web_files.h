
#ifndef WEB_FILES_H_
#define WEB_FILES_H_

#include "quack_config.h"
#include "quack_utils.h"

// ======================== GZIP Compressed Web Files ========================

#ifdef ESP_ENABLED
const u8 HTTP404_HTML[] PROGMEM = {
#else
const u8 HTTP404_HTML[] = {
#endif
	0x1f,	0x8b,	0x8,	0x0,	0xb5,	0x4b,	0x85,	0x5e,	0x2,
	0xff,	0xb3,	0xc9,	0x28,	0xc9,	0xcd,	0xb1,	0xe3,	0x52,
	0x0,	0x2,	0x9b,	0x8c,	0xd4,	0xc4,	0x14,	0x8,	0x13,
	0xcc,	0x2d,	0xc9,	0x2c,	0xc9,	0x49,	0xb5,	0x33,	0x31,
	0x30,	0xb1,	0xd1,	0x87,	0x30,	0x21,	0xaa,	0xf4,	0x11,
	0xca,	0x6c,	0x92,	0xf2,	0x53,	0x2a,	0x91,	0x74,	0x64,
	0x18,	0x82,	0x94,	0x2b,	0xe8,	0x2a,	0x4,	0x24,	0xa6,
	0xa7,	0x2a,	0xe4,	0xe5,	0x97,	0x28,	0xa4,	0xe5,	0x97,
	0xe6,	0xa5,	0x28,	0x2,	0xf5,	0x18,	0xc2,	0x74,	0x43,
	0xb4,	0x0,	0x45,	0x40,	0xf6,	0x2,	0x0,	0xd6,	0x4,
	0x29,	0x3b,	0x7e,	0x0,	0x0,	0x0
};

#ifdef ESP_ENABLED
const u8 INDEX_HTML[] PROGMEM = {
#else
const u8 INDEX_HTML[] = {
#endif
	0x1f,	0x8b,	0x8,	0x0,	0xb5,	0x4b,	0x85,	0x5e,	0x2,
	0xff,	0x5d,	0x91,	0x31,	0x6f,	0xc4,	0x20,	0xc,	0x85,
	0xf7,	0xfb,	0x15,	0x2e,	0x53,	0x3b,	0x54,	0xa8,	0x7b,
	0xc2,	0xdc,	0xad,	0x95,	0x72,	0x52,	0x67,	0x2,	0x3e,
	0xc5,	0x2a,	0x60,	0xc4,	0x19,	0xa9,	0xf7,	0xef,	0x4b,
	0xc2,	0xb5,	0x89,	0x8e,	0x5,	0x6c,	0x7d,	0xef,	0xf9,
	0xc9,	0xc,	0x8b,	0xc4,	0x60,	0x4e,	0xd0,	0xce,	0xb0,
	0xa0,	0xf5,	0xfd,	0xb9,	0x95,	0x42,	0x12,	0xd0,	0xbc,
	0x63,	0x8,	0xc,	0x5f,	0x5c,	0x82,	0x7f,	0x1a,	0x74,
	0xef,	0x75,	0x5c,	0xef,	0xfc,	0x30,	0xb3,	0xbf,	0x1d,
	0xa4,	0xcb,	0xdb,	0x83,	0xae,	0x35,	0xe,	0xc6,	0xf8,
	0x23,	0xb6,	0xa0,	0x5,	0xf2,	0xa3,	0x42,	0x4f,	0xc2,
	0x45,	0x99,	0xe6,	0x7d,	0x6f,	0x1f,	0xc8,	0xb9,	0x8a,
	0x70,	0x2,	0x4e,	0x2e,	0x90,	0xfb,	0x1e,	0xd5,	0x15,
	0x93,	0x9f,	0x5c,	0xa1,	0x2c,	0xcf,	0x2f,	0xca,	0x4c,
	0xad,	0x1a,	0x74,	0x67,	0xcc,	0x69,	0x57,	0x5d,	0xb8,
	0x44,	0x88,	0x28,	0xb,	0x37,	0xff,	0xcf,	0x8f,	0xe9,
	0xac,	0xc0,	0x3a,	0x21,	0x4e,	0xa3,	0xd2,	0x35,	0x7,
	0xb6,	0x5e,	0x1,	0x26,	0x27,	0xb7,	0x8c,	0xa3,	0x8a,
	0x35,	0x8,	0x65,	0x5b,	0x44,	0xaf,	0xb2,	0x57,	0x6f,
	0xc5,	0xaa,	0x3d,	0xc1,	0xe6,	0x47,	0x29,	0x57,	0x81,
	0x8e,	0x5f,	0x28,	0xa0,	0x2,	0xfd,	0x40,	0xdc,	0x73,
	0x76,	0xe4,	0x5a,	0xe7,	0x48,	0xd2,	0xe2,	0x6d,	0x37,
	0xac,	0x8a,	0x3d,	0xe5,	0xbf,	0x64,	0x1b,	0xf7,	0xb7,
	0xc9,	0xbe,	0xbe,	0xb6,	0xa6,	0xf5,	0x33,	0x7e,	0x1,
	0xeb,	0xfe,	0xb1,	0x5a,	0x93,	0x1,	0x0,	0x0
};

// ============================== GET Callbacks ==============================

#define HTTP404_HTML_CALLBACK \
server.on("404.html", HTTP_GET, [](AsyncWebServerRequest* request) { \
    reply(request, 404, "text/html", HTTP404_HTML, sizeof(HTTP404_HTML)); \
})

#define INDEX_HTML_CALLBACK \
server.on("index.html", HTTP_GET, [](AsyncWebServerRequest* request) { \
    reply(request, 200, "text/html", INDEX_HTML, sizeof(INDEX_HTML)); \
})

#define GET_CALLBACKS \
HTTP404_HTML_CALLBACK; \
INDEX_HTML_CALLBACK

#endif
